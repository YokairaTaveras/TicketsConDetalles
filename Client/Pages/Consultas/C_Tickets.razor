@page "/consultaTickets"
@using TicketsConDetalles.Shared.Models;

@inject HttpClient httpClient

<div class="container">
    <div class="card">

        <div class="card-header">
            <head>
                <h1>Consulta de Tickets</h1>
            </head>
        </div>

                <div class="row">
                    <div class="col">
                        <label>Desde</label>
                        <InputDate @bind-Value="Desde" class="form-control"></InputDate>
                    </div>
                    <div class="col">
                        <label>Hasta</label>
                        <InputDate @bind-Value="Hasta" class="form-control"></InputDate>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <label>Buscar por Id</label>
                        <InputNumber class="form-control" @bind-Value="ticketId" aria-placeholder="BusquedaId"> </InputNumber>
                    </div>

                    <div class="col">
                        <button type="button" class="btn btn-outline-primary" @onclick="Buscar"> <i class="oi oi-reload"> Buscar</i></button>
                    </div>*
                </div>

                @if (tickets is not null)
                {
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>TicketId</th>
                                <th>Fecha</th>
                                <th>Solicitado Por</th>
                                <th>Asunto</th>
                                <th>Descripci&oacute;n</th>
                                <th></th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var ticket in tickets)
                            {
                                <tr>
                                    <td>@ticket.TicketId</td>
                                    <td>@ticket.Fecha</td>
                                    <td>@ticket.SolicitadoPor</td>
                                    <td>@ticket.Asunto</td>
                                    <td>@ticket.Descripcion</td>
                                    <td><a href="/registroTickets/@ticket.TicketId"><button type="button" class="btn btn-outline-primary"><i class="oi oi-eye"></i> Ver</button></a></td>
                                </tr>
                            }

                        </tbody>

                    </table>
                }
        </div>

        <div class="card-footer">
            <div class="form-row justify-content-sm-between" aria-orientation="vertical">
                <div class="col-3">
                    <label for="CantidadFilas" class="col-form-label"><strong>Num. Filas</strong>&nbsp;</label>
                    <input id="CantidadFilas" @bind-value="@Conteo" disabled class="form-control" />
                </div>
            </div>
        </div>

    </div>

@code
{
    public List<Tickets> tickets { get; set; } = new List<Tickets>();
    public int Conteo { get; set; }

    public DateTime Desde { get; set; }

    public DateTime Hasta { get; set; }

    public int ticketId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Desde = DateTime.Now.AddMonths(-1);
        Hasta = DateTime.Now;
    }

    public async Task Buscar()
    {
        tickets = await httpClient.GetFromJsonAsync<List<Tickets>>($"api/Tickets");

        if (ticketId > 0)
        {
            tickets = tickets.Where(t => t.TicketId == ticketId).ToList();
        }

        if (Desde != default && Hasta != default)
        {
            tickets = tickets.Where(t => t.Fecha >= Desde.Date && t.Fecha <= Hasta).ToList();
        }

        Conteo = tickets != null ? tickets.Count : 0;
        StateHasChanged();
    }
}